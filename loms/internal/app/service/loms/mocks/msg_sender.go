// Code generated by mockery v2.30.16. DO NOT EDIT.

package mocks

import (
	fmt "fmt"

	mock "github.com/stretchr/testify/mock"
)

// MsgSender is an autogenerated mock type for the MsgSender type
type MsgSender struct {
	mock.Mock
}

// SendMessage provides a mock function with given fields: key, msg
func (_m *MsgSender) SendMessage(key fmt.Stringer, msg interface{}) error {
	ret := _m.Called(key, msg)

	var r0 error
	if rf, ok := ret.Get(0).(func(fmt.Stringer, interface{}) error); ok {
		r0 = rf(key, msg)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewMsgSender creates a new instance of MsgSender. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMsgSender(t interface {
	mock.TestingT
	Cleanup(func())
}) *MsgSender {
	mock := &MsgSender{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
